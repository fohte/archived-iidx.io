version: '3'

services:
  mysql:
    image: iidxio/mysql:dev
    build:
      context: .
      dockerfile: ./docker/mysql/Dockerfile.dev
    volumes:
      - db_data:/var/lib/mysql
      - ./docker/mysql/my.cnf:/etc/mysql/conf.d/my.cnf
    environment:
      MYSQL_ROOT_PASSWORD: password
    healthcheck:
      test: ['CMD-SHELL', 'mysqladmin ping -u root -ppassword']
      interval: 5s
      timeout: 10s
      retries: 3
    ports:
      - '3306:3306'

  redis:
    image: redis:4.0.14-stretch

  backend: &app_base
    image: iidxio/backend:dev
    build:
      context: .
      dockerfile: ./docker/backend/Dockerfile.dev
    working_dir: /app/backend
    command: bundle exec puma -C config/puma.rb
    volumes:
      - .:/app
      - bundle:/usr/local/bundle
      - spring:/tmp/spring
    environment:
      IIDX_IO_TEXTAGE_CACHE_PATH: /app/.cache
      MYSQL_HOST: mysql
      MYSQL_PASSWORD: password
      MYSQL_PORT: 3306
      RAILS_LOG_TO_STDOUT: 'true'
      REDIS_HOST: redis
      REDIS_PORT: 6379
      SPRING_SOCKET: /tmp/spring/spring.sock
    env_file:
      - .env
    depends_on:
      - mysql
      - redis
    ports:
      - '5000:3000'

  spring: &spring
    <<: *app_base
    command: bin/spring server
    ports: []
    tty: false
    stdin_open: false
    restart: on-failure:3

  frontend: &frontend
    image: iidxio/frontend:dev
    build:
      context: .
      dockerfile: ./docker/frontend/Dockerfile.dev
    working_dir: /app/frontend
    command: yarn run dev
    volumes:
      - .:/app
      - node_modules:/app/frontend/node_modules
    environment:
      PRIVATE_API_URL: http://backend:3000/graphql
      PUBLIC_API_URL: http://localhost:5000/graphql
    env_file:
      - .env
    depends_on:
      - backend
    ports:
      - '3000:3000'

  storybook:
    <<: *frontend
    command: yarn run storybook --ci
    ports:
      - '9001:9001'

volumes:
  db_data:
  bundle:
  node_modules:
  spring:
